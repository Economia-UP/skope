theme(
legend.position = "none"
)
# Create graph
ggplot(growth_clean %>%
# Filtering dataframe
filter(obsTime == max(obsTime),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "EU27_2020", "USA")) %>%
arrange(desc(obsValue)),  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1200, height = 800, units = "px", dpi = 150, create.dir = TRUE)
# Clean data
growth_clean <- growth %>%
reframe(obsTime, REF_AREA, obsValue) %>%
arrange(desc(obsTime), REF_AREA) %>%
mutate(
REF_AREA = ifelse(REF_AREA == "EU27_2020", "EU", REF_AREA),
fill_color = ifelse(REF_AREA == "MEX", "#931336", "grey")) %>%
# Filtering dataframe
filter(obsTime == max(obsTime),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "EU27_2020", "USA"))
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
# Clean data
growth_clean <- growth %>%
reframe(obsTime, REF_AREA, obsValue) %>%
arrange(desc(obsTime), REF_AREA) %>%
mutate(
REF_AREA = ifelse(REF_AREA == "EU27_2020", "EU (Unión Europea)", REF_AREA),
fill_color = ifelse(REF_AREA == "MEX", "#931336", "grey")) %>%
# Filtering dataframe
filter(obsTime == max(obsTime),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "EU (Unión Europea)", "USA"))
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
# Clean data
growth_clean <- growth %>%
reframe(obsTime, REF_AREA, obsValue) %>%
arrange(desc(obsTime), REF_AREA) %>%
mutate(
REF_AREA = ifelse(REF_AREA == "EU27_2020", "UE^*" REF_AREA),
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
# Clean data
growth_clean <- growth %>%
reframe(obsTime, REF_AREA, obsValue) %>%
arrange(desc(obsTime), REF_AREA) %>%
mutate(
REF_AREA = ifelse(REF_AREA == "EU27_2020", "UE^*" REF_AREA),
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
# Clean data
growth_clean <- growth %>%
reframe(obsTime, REF_AREA, obsValue) %>%
arrange(desc(obsTime), REF_AREA) %>%
mutate(
REF_AREA = ifelse(REF_AREA == "EU27_2020", "UE*" REF_AREA),
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
# Clean data
growth_clean <- growth %>%
reframe(obsTime, REF_AREA, obsValue) %>%
arrange(desc(obsTime), REF_AREA) %>%
mutate(
REF_AREA = ifelse(REF_AREA == "EU27_2020", "UE*" REF_AREA),
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
url <- "https://sdmx.oecd.org/public/rest/data/OECD.SDD.NAD,DSD_NAMAIN1@DF_QNA_EXPENDITURE_GROWTH_OECD,/A..IRL+ARG+BRA+CHN+IND+IDN+RUS+SAU+ZAF+AUS+AUT+BEL+CAN+CHE+CHL+COL+CRI+CZE+DEU+DNK+ESP+FIN+EST+FRA+GBR+GRC+HUN+ISL+LTU+ISR+ITA+JPN+KOR+LUX+LVA+MEX+NLD+NOR+NZL+POL+PRT+SVK+SVN+SWE+TUR+USA+OECD+G20+G7+USMCA+OECDE+EA20+EU27_2020...B1GQ......GY.?startPeriod=2020"
View(growth)
# Clean data
growth_clean <- growth %>%
reframe(obsTime, REF_AREA, obsValue) %>%
arrange(desc(obsTime), REF_AREA) %>%
mutate(
REF_AREA = ifelse(REF_AREA == "EU27_2020", "UE*", REF_AREA),
fill_color = ifelse(REF_AREA == "MEX", "#931336", "grey")) %>%
# Filtering dataframe
filter(obsTime == max(obsTime),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "UE*", "USA"))
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("* UE (Unión Europea)\nFuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1200, height = 800, units = "px", dpi = 150, create.dir = TRUE)
# Fetch the data using the specified series IDs
gdp <- inegi_series(series = "736181", token = inegi.api) %>%
# group_by(date_shortcut) %>%
# arrange(date) %>%
# mutate(growth  = (values/lag(values) - 1)*100) %>%
mutate(year = year(date),  # Extrae el año de la fecha
sexenio = case_when(
year > 1982 & year <= 1988 ~ "Miguel de la Madrid \n(1982-1988)",
year > 1988 & year <= 1994 ~ "Carlos Salinas \n(1988-1994)",
year > 1994 & year <= 2000 ~ "Ernesto Zedillo \n(1994-2000)",
year > 2000 & year <= 2006 ~ "Vicente Fox \n(2000-2006)",
year > 2006 & year <= 2012 ~ "Felipe Calderón \n(2006-2012)",
year > 2012 & year <= 2018 ~ "Enrique Peña Nieto \n(2012-2018)",
year > 2018 & year <= 2024 ~ "Andrés Manuel López Obrador \n(2018-2024)",
year > 2024 & year <= 2030 ~ "Claudia Sheinbaum Pardo \n(2024-2030)",
TRUE ~ "Otro"
),
sexenio = factor(sexenio, levels = orden_sexenios), # Ordenar como factor
)
pop <- inegi_series_multiple(series = "289242", token = inegi.api) %>%
select(date, date_shortcut, values)
gdppc <- left_join(gdp, pop, join_by(date), suffix = c("_gdp", "_pop")) %>%
reframe(date, date_shortcut = date_shortcut_gdp, gdppc = values_gdp/values_pop*1000000, sexenio) %>%
filter(gdppc != 0)
sexenios_gdppc <- gdppc %>%
group_by(sexenio) %>%
reframe(mean_gdppc = mean(gdppc, na.rm = TRUE)) %>%
filter(!is.na(sexenio)) %>%
arrange(sexenio)
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México \npromedio por sexenio",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_x_comma() +
theme_ipsum_rc(grid="Y") %>%
gg_check()
pop <- inegi_series_multiple(series = "289242", token = inegi.api) %>%
select(date, date_shortcut, values)
gdppc <- left_join(gdp, pop, join_by(date), suffix = c("_gdp", "_pop")) %>%
reframe(date, date_shortcut = date_shortcut_gdp, gdppc = values_gdp/values_pop*1000000, sexenio) %>%
filter(gdppc != 0)
sexenios_gdppc <- gdppc %>%
group_by(sexenio) %>%
reframe(mean_gdppc = mean(gdppc, na.rm = TRUE)) %>%
filter(!is.na(sexenio)) %>%
arrange(sexenio)
View(sexenios_gdppc)
url <- "https://sdmx.oecd.org/public/rest/data/OECD.SDD.NAD,DSD_NAMAIN1@DF_QNA_EXPENDITURE_GROWTH_OECD,/A..IRL+ARG+BRA+CHN+IND+IDN+RUS+SAU+ZAF+AUS+AUT+BEL+CAN+CHE+CHL+COL+CRI+CZE+DEU+DNK+ESP+FIN+EST+FRA+GBR+GRC+HUN+ISL+LTU+ISR+ITA+JPN+KOR+LUX+LVA+MEX+NLD+NOR+NZL+POL+PRT+SVK+SVN+SWE+TUR+USA+OECD+G20+G7+USMCA+OECDE+EA20+EU27_2020...B1GQ......GY.?startPeriod=2020"
orden_sexenios <- c(
"Miguel de la Madrid \n(1982-1988)",
"Carlos Salinas \n(1988-1994)",
"Ernesto Zedillo \n(1994-2000)",
"Vicente Fox \n(2000-2006)",
"Felipe Calderón \n(2006-2012)",
"Enrique Peña Nieto \n(2012-2018)",
"Andrés Manuel López Obrador \n(2018-2024)",
"Claudia Sheinbaum Pardo \n(2024-2030)"
)
sexenios_gdp <- gdp %>%
group_by(sexenio) %>%
reframe(mean_growth = mean(values, na.rm = TRUE)) %>%
filter(!is.na(sexenio)) %>%
arrange(sexenio)
# Fetch the data using the specified series IDs
gdp <- inegi_series(series = "736181", token = inegi.api) %>%
# group_by(date_shortcut) %>%
# arrange(date) %>%
# mutate(growth  = (values/lag(values) - 1)*100) %>%
mutate(year = year(date),  # Extrae el año de la fecha
sexenio = case_when(
year > 1982 & year <= 1988 ~ "Miguel de la Madrid \n(1982-1988)",
year > 1988 & year <= 1994 ~ "Carlos Salinas \n(1988-1994)",
year > 1994 & year <= 2000 ~ "Ernesto Zedillo \n(1994-2000)",
year > 2000 & year <= 2006 ~ "Vicente Fox \n(2000-2006)",
year > 2006 & year <= 2012 ~ "Felipe Calderón \n(2006-2012)",
year > 2012 & year <= 2018 ~ "Enrique Peña Nieto \n(2012-2018)",
year > 2018 & year <= 2024 ~ "Andrés Manuel López Obrador \n(2018-2024)",
year > 2024 & year <= 2030 ~ "Claudia Sheinbaum Pardo \n(2024-2030)",
TRUE ~ "Otro"
),
sexenio = factor(sexenio, levels = orden_sexenios), # Ordenar como factor
)
pop <- inegi_series_multiple(series = "289242", token = inegi.api) %>%
select(date, date_shortcut, values)
gdppc <- left_join(gdp, pop, join_by(date), suffix = c("_gdp", "_pop")) %>%
reframe(date, date_shortcut = date_shortcut_gdp, gdppc = values_gdp/values_pop*1000000, sexenio) %>%
filter(gdppc != 0)
sexenios_gdppc <- gdppc %>%
group_by(sexenio) %>%
reframe(mean_gdppc = mean(gdppc, na.rm = TRUE)) %>%
filter(!is.na(sexenio)) %>%
arrange(sexenio)
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México \npromedio por sexenio",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_x_comma() +
theme_ipsum_rc(grid="Y") %>%
gg_check()
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México \npromedio por sexenio",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma() +
theme_ipsum_rc(grid="Y") %>%
gg_check()
orden_sexenios <- c(
"MMH \n(1982-1988)",
"CSG \n(1988-1994)",
"EZPL \n(1994-2000)",
"VFQ \n(2000-2006)",
"FCH \n(2006-2012)",
"EPN \n(2012-2018)",
"AMLO \n(2018-2024)",
"CSP \n(2024-2030)"
)
sexenios_gdp <- gdp %>%
group_by(sexenio) %>%
reframe(mean_growth = mean(values, na.rm = TRUE)) %>%
filter(!is.na(sexenio)) %>%
arrange(sexenio)
# Fetch the data using the specified series IDs
gdp <- inegi_series(series = "736181", token = inegi.api) %>%
# group_by(date_shortcut) %>%
# arrange(date) %>%
# mutate(growth  = (values/lag(values) - 1)*100) %>%
mutate(year = year(date),  # Extrae el año de la fecha
sexenio = case_when(
year > 1982 & year <= 1988 ~ "MMH \n(1982-1988)",
year > 1988 & year <= 1994 ~ "CSG \n(1988-1994)",
year > 1994 & year <= 2000 ~ "EZPL \n(1994-2000)",
year > 2000 & year <= 2006 ~ "VFQ \n(2000-2006)",
year > 2006 & year <= 2012 ~ "FCH \n(2006-2012)",
year > 2012 & year <= 2018 ~ "EPN \n(2012-2018)",
year > 2018 & year <= 2024 ~ "AMLO \n(2018-2024)",
year > 2024 & year <= 2030 ~ "CSP \n(2024-2030)",
TRUE ~ "Otro"
),
sexenio = factor(sexenio, levels = orden_sexenios), # Ordenar como factor
)
pop <- inegi_series_multiple(series = "289242", token = inegi.api) %>%
select(date, date_shortcut, values)
gdppc <- left_join(gdp, pop, join_by(date), suffix = c("_gdp", "_pop")) %>%
reframe(date, date_shortcut = date_shortcut_gdp, gdppc = values_gdp/values_pop*1000000, sexenio) %>%
filter(gdppc != 0)
sexenios_gdppc <- gdppc %>%
group_by(sexenio) %>%
reframe(mean_gdppc = mean(gdppc, na.rm = TRUE)) %>%
filter(!is.na(sexenio)) %>%
arrange(sexenio)
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México \npromedio por sexenio",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma() +
theme_ipsum_rc(grid="Y") %>%
gg_check()
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México \npromedio por sexenio",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma(bearks = seq(0, max(sexenios_gdppc$mean_gdppc), 25000)) +
theme_ipsum_rc(grid="Y") %>%
gg_check()
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México \npromedio por sexenio",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma(bearks = seq(0, max(sexenios_gdppc$mean_gdppc), 25000)) +
theme_ipsum_rc(grid="Y")
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México \npromedio por sexenio",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma(breaks = seq(0, max(sexenios_gdppc$mean_gdppc), 25000)) +
theme_ipsum_rc(grid="Y")
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México \npromedio por sexenio",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma(breaks = seq(0, 200000, 25000)) +
theme_ipsum_rc(grid="Y")
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México \npromedio por sexenio",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma(breaks = seq(0, 225000, 25000)) +
theme_ipsum_rc(grid="Y")
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México \npromedio por sexenio",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma(breaks = seq(0, 225000, 25000)) +
theme_ipsum_rc(grid="Y")
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México \npromedio por sexenio",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma(breaks = seq(0, max(sexenios_gdppc$mean_gdppc), 25000)) +
theme_ipsum_rc(grid="Y")
ggsave("plots/gdp/gdppc_sexenio.png",  width = 1200, height = 800, units = "px", dpi = 150, create.dir = TRUE)
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México promedio por sexenio",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma(breaks = seq(0, max(sexenios_gdppc$mean_gdppc), 25000)) +
theme_ipsum_rc(grid="Y")
ggsave("plots/gdp/gdppc_sexenio.png",  width = 1200, height = 800, units = "px", dpi = 150, create.dir = TRUE)
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México promedio por sexenio",
subtitle = "Moneda nacional (MXN)",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma(breaks = seq(0, max(sexenios_gdppc$mean_gdppc), 25000)) +
theme_ipsum_rc(grid="Y")
ggsave("plots/gdp/gdppc_sexenio.png",  width = 1200, height = 800, units = "px", dpi = 150, create.dir = TRUE)
