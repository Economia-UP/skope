ggplot(series.long, aes(date, value/100, color = index, group = date)) +
geom_line(color = "grey", linewidth = 1) +
geom_point(size = 3) +
labs(
title = paste("Expectativas de inflación", year(Sys.Date())),
subtitle = "Encuestas Sobre las Expectativas de los Especialistas en Economía del \nSector Privado Expectativas de Inflación para los Próximos 12 Meses",
x = "",
y = "",
color = "",
caption = paste("Fuente: Banxico. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_y_percent(labels = scales::percent_format(accuracy = 0.1)) +  # Two decimal places
scale_color_manual(values=c("#009076", "#ffe59c", "#c71e1d")) +
theme_ipsum_rc(base_family = "Rubik") +
theme(
legend.position = "bottom"
)
series.df <- reduce(list(first, med, third), full_join, by = "date") %>%
filter(date >= Sys.Date() - years(3))
colnames(series.df)[2:4] <- c("Primer cuartil", "Mediana", "Tercer cuartil")
series.long <- series.df %>%
pivot_longer(
!date,
names_to = "index",
values_to = "value"
) %>%
mutate(index = factor(index, levels = c("Primer cuartil", "Mediana", "Tercer cuartil")))
ggplot(series.long, aes(date, value/100, color = index, group = date)) +
geom_line(color = "grey", linewidth = 1) +
geom_point(size = 3) +
labs(
title = paste("Expectativas de inflación", year(Sys.Date())),
subtitle = "Encuestas Sobre las Expectativas de los Especialistas en Economía del \nSector Privado Expectativas de Inflación para los Próximos 12 Meses",
x = "",
y = "",
color = "",
caption = paste("Fuente: Banxico. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_y_percent(labels = scales::percent_format(accuracy = 0.1)) +  # Two decimal places
scale_color_manual(values=c("#009076", "#ffe59c", "#c71e1d")) +
theme_ipsum_rc(base_family = "Rubik") +
theme(
legend.position = "bottom"
)
series.df <- reduce(list(first, med, third), full_join, by = "date") %>%
filter(date >= Sys.Date() - years(2))
colnames(series.df)[2:4] <- c("Primer cuartil", "Mediana", "Tercer cuartil")
series.long <- series.df %>%
pivot_longer(
!date,
names_to = "index",
values_to = "value"
) %>%
mutate(index = factor(index, levels = c("Primer cuartil", "Mediana", "Tercer cuartil")))
ggplot(series.long, aes(date, value/100, color = index, group = date)) +
geom_line(color = "grey", linewidth = 1) +
geom_point(size = 3) +
labs(
title = paste("Expectativas de inflación", year(Sys.Date())),
subtitle = "Encuestas Sobre las Expectativas de los Especialistas en Economía del \nSector Privado Expectativas de Inflación para los Próximos 12 Meses",
x = "",
y = "",
color = "",
caption = paste("Fuente: Banxico. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_y_percent(labels = scales::percent_format(accuracy = 0.1)) +  # Two decimal places
scale_color_manual(values=c("#009076", "#ffe59c", "#c71e1d")) +
theme_ipsum_rc(base_family = "Rubik") +
theme(
legend.position = "bottom"
)
ggsave("plots/inflation/expectedinflation.svg",  width = 8, height = 6, create.dir = TRUE)
# Fetch the data using the specified series IDs
idSeries <- c("SR14216", "SR14217","SR14218")
# Get the data
series <- getSeriesData(idSeries)
med <- getSerieDataFrame(series, "SR14216")
first <- getSerieDataFrame(series, "SR14217")
third <- getSerieDataFrame(series, "SR14218")
series.df <- reduce(list(first, med, third), full_join, by = "date") %>%
filter(date >= Sys.Date() - years(3))
colnames(series.df)[2:4] <- c("Primer cuartil", "Mediana", "Tercer cuartil")
series.long <- series.df %>%
pivot_longer(
!date,
names_to = "index",
values_to = "value"
) %>%
mutate(index = factor(index, levels = c("Primer cuartil", "Mediana", "Tercer cuartil")))
ggplot(series.long, aes(date, value/100, color = index, group = date)) +
geom_line(color = "grey", linewidth = 1) +
geom_point(size = 3) +
labs(
title = paste("Expectativas de inflación", year(Sys.Date())),
subtitle = "Encuestas Sobre las Expectativas de los Especialistas en Economía del \nSector Privado Expectativas de Inflación para los Próximos 12 Meses",
x = "",
y = "",
color = "",
caption = paste("Fuente: Banxico. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(labels = scales::percent_format(accuracy = 0.1)) +  # Two decimal places
scale_color_manual(values=c("#009076", "#ffe59c", "#c71e1d")) +
theme_ipsum_rc(base_family = "Rubik") +
theme(
legend.position = "bottom"
)
ggplot(series.long, aes(date, value/100, color = index, group = date)) +
geom_line(color = "grey", linewidth = 1) +
geom_point(size = 3) +
labs(
title = paste("Expectativas de inflación", year(Sys.Date())),
subtitle = "Encuestas Sobre las Expectativas de los Especialistas en Economía del \nSector Privado Expectativas de Inflación para los Próximos 12 Meses",
x = "",
y = "",
color = "",
caption = paste("Fuente: Banxico. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_y_percent(labels = scales::percent_format(accuracy = 0.1)) +  # Two decimal places
scale_color_manual(values=c("#009076", "#ffe59c", "#c71e1d")) +
theme_ipsum_rc(base_family = "Rubik") +
theme(
legend.position = "bottom"
)
series.df <- reduce(list(first, med, third), full_join, by = "date") %>%
filter(date >= Sys.Date() - years(2))
colnames(series.df)[2:4] <- c("Primer cuartil", "Mediana", "Tercer cuartil")
series.long <- series.df %>%
pivot_longer(
!date,
names_to = "index",
values_to = "value"
) %>%
mutate(index = factor(index, levels = c("Primer cuartil", "Mediana", "Tercer cuartil")))
ggplot(series.long, aes(date, value/100, color = index, group = date)) +
geom_line(color = "grey", linewidth = 1) +
geom_point(size = 3) +
labs(
title = paste("Expectativas de inflación", year(Sys.Date())),
subtitle = "Encuestas Sobre las Expectativas de los Especialistas en Economía del \nSector Privado Expectativas de Inflación para los Próximos 12 Meses",
x = "",
y = "",
color = "",
caption = paste("Fuente: Banxico. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_y_percent(labels = scales::percent_format(accuracy = 0.1)) +  # Two decimal places
scale_color_manual(values=c("#009076", "#ffe59c", "#c71e1d")) +
theme_ipsum_rc(base_family = "Rubik") +
theme(
legend.position = "bottom"
)
ggplot(series.long, aes(date, value/100, color = index, group = date)) +
geom_line(color = "grey", linewidth = 1) +
geom_point(size = 3) +
labs(
title = paste("Expectativas de inflación", year(Sys.Date())),
subtitle = "Encuestas Sobre las Expectativas de los Especialistas en Economía del \nSector Privado Expectativas de Inflación para los Próximos 12 Meses",
x = "",
y = "",
color = "",
caption = paste("Fuente: Banxico. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_y_percent(labels = scales::percent_format(accuracy = 0.1)) +  # Two decimal places
scale_color_manual(values=c("#009076", "#ffe59c", "#c71e1d")) +
theme_ipsum_rc(base_family = "Rubik") +
theme(
legend.position = "bottom"
)
ggsave("plots/inflation/expectedinflation_long.svg",  width = 8, height = 6, create.dir = TRUE)
ggplot(series.long, aes(date, value/100, color = index, group = date)) +
geom_line(color = "grey", linewidth = 1) +
geom_point(size = 3) +
labs(
title = paste("Expectativas de inflación", year(Sys.Date())),
subtitle = "Encuestas Sobre las Expectativas de los Especialistas en Economía del \nSector Privado Expectativas de Largo Plazo de la Inflación para los Próximos 5 a 8 Años",
x = "",
y = "",
color = "",
caption = paste("Fuente: Banxico. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_y_percent(labels = scales::percent_format(accuracy = 0.1)) +  # Two decimal places
scale_color_manual(values=c("#009076", "#ffe59c", "#c71e1d")) +
theme_ipsum_rc(base_family = "Rubik") +
theme(
legend.position = "bottom"
)
ggsave("plots/inflation/expectedinflation_long.svg",  width = 8, height = 6, create.dir = TRUE)
# Fetch the data using the specified series IDs
idSeries <- c("SR14216", "SR14217","SR14218")
# Get the data
series <- getSeriesData(idSeries)
med <- getSerieDataFrame(series, "SR14216")
first <- getSerieDataFrame(series, "SR14217")
third <- getSerieDataFrame(series, "SR14218")
series.df <- reduce(list(first, med, third), full_join, by = "date") %>%
filter(date >= Sys.Date() - years(2))
View(series.df)
inegi.api <- "446548c3-7b55-4b22-8430-ac8f251ea555"
# Load the necessary libraries
library(inegiR)
library(tidyverse)
library(ggpattern)
library(ggrepel)
library(hrbrthemes)
library(showtext)
library(svglite)
# Fetch the data using the specified series IDs
idSeries1 <- c("910406", "910407", "910410")  # Your INEGI series IDs
# Get the data
series1 <- inegi_series_multiple(series = idSeries1, token = inegi.api)
# Transform the data
series.wide <- series1 %>%
select(date, values, meta_indicatorid) %>%
pivot_wider(names_from = meta_indicatorid, values_from = values) %>%
rename(
date = date,
'Inflación general' = '910406',
'Subyacente' = '910407',
'No subyacente' = '910410')
# Specify the output directory and file name
write.csv(series.wide, "data/inflation/inpc.csv", row.names = FALSE)
df <- series1 %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910406" = "Inflación general",
"910407" = "Subyacente",
"910410" = "No subyacente")) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= Sys.Date() - years(10),
indicator != "No subyacente")
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = df %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
# geom_text(
#   data = df %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
#   aes(label = scales::percent(values / 100)),  # Format label as percentage
#   hjust = -0.3,  # Adjust text position (shift right)
#   vjust = 0.2,
#   size = 3.5,
#   show.legend = FALSE
# ) +
ggrepel::geom_text_repel(
data = df %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(values/100, accuracy = 0.1)),
nudge_x = 50,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Consumidor",
y = "",
x = "",
color = "",
caption = paste("Fuente: INEGI. Última actualización", format(Sys.time(), '%d %b, %Y'))) +
scale_y_percent(breaks = seq(min(df$values)/100, max(df$values)/100,
by = 0.01)) +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574")) +
theme_ipsum_rc(grid = "Y", base_family = "Rubik") +
theme(legend.position="bottom")
# Fetch the data using the specified series IDs (Subyacente)
idSeries2 <- c("910407", "910408", "910409")  # Your INEGI series IDs
# Get the data
series2 <- inegi_series_multiple(series = idSeries2, token = inegi.api)
# Transform the data
series2.wide <- series2 %>%
select(date, values, meta_indicatorid) %>%
pivot_wider(names_from = meta_indicatorid, values_from = values) %>%
rename(
date = date,
"Total" = "910407",
"Mercancías" = "910408",
"Servicios" = "910409") %>%
factor(levels = c("Total", "Mercancías", "Servicios"))
# Specify the output directory and file name
write.csv(series2.wide, "data/inflation/inpc_core.csv", row.names = FALSE)
sub <- series2 %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910407" = "Total",
"910408" = "Mercancías",
"910409" = "Servicios") %>%
factor(levels = c("Total", "Mercancías", "Servicios"))) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= Sys.Date() - years(10),
indicator != "Total")
# Core inflation graph
ggplot(sub, aes(date, values / 100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = sub %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
geom_text(
data = sub %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
aes(label = scales::percent(values / 100)),  # Format label as percentage
hjust = -0.3,  # Adjust text position (shift right)
vjust = 0.2,
size = 3.5,
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
scale_y_percent(breaks = seq(min(sub$values)/100, max(sub$values) / 100, by = 0.01)) +
scale_x_date(
breaks = seq(as.Date(min(sub$date)), as.Date(max(sub$date)), by = "1 year"),  # Major ticks (yearly)
minor_breaks = seq(as.Date(min(sub$date)), as.Date(max(sub$date)), by = "1 month"),  # Minor ticks (monthly)
date_labels = "%Y"  # Only show years on the x-axis
) +
labs(
title = "Inflación subyacente en México",
# subtitle = "",
y = "",
x = "Último dato: enero 2025.",
color = "",
caption = paste("Fuente: INEGI. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
# scale_color_ft() +
scale_color_manual(values = c("#970639", "#043574", "black")) +
theme_ipsum_rc(grid = "Y", base_family = "Rubik") +
theme(
legend.position = "bottom",
panel.grid.minor = element_line(color = "gray80", linetype = "dashed")  # Enable minor grid lines
)
ggsave("plots/inflation/inpc_sub.svg",  width = 8, height = 6, create.dir = TRUE)
# Fetch the data using the specified series IDs
idSeries <- c("673095", "673098", "673100")  # Your INEGI series IDs
# Get the data
series <- inegi_series_multiple(series = idSeries, token = inegi.api)
serie <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"673095" = "INPP (sin petróleo y con servicios)",
"673098" = "Actividades secundarias sin petróleo",
"673100" = "Actividades terciarias") %>%
factor(levels = c("INPP (sin petróleo y con servicios)",
"Actividades secundarias sin petróleo",
"Actividades terciarias"))) %>%
rename(indicator = meta_indicatorid) %>%
group_by(indicator) %>%
arrange(date) %>%
mutate(pc = (values/lag(values, 12) -1)*100) %>%
filter(date >= Sys.Date() - years(10))
# Transform the data
series.wide <- series %>%
select(date, values, meta_indicatorid) %>%
pivot_wider(names_from = meta_indicatorid, values_from = values) %>%
rename(
date = date,
"INPP (sin petróleo y con servicios)" = "673095",
"Actividades secundarias sin petróleo" = "673098",
"Actividades terciarias" = "673100") %>%
factor(levels = c("INPP (sin petróleo y con servicios)",
"Actividades secundarias sin petróleo",
"Actividades terciarias"))
# Specify the output directory and file name
write.csv(series.wide, "data/inflation/inpp.csv", row.names = FALSE)
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 50,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.2,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato: enero 2025.",
color = "",
caption = paste("Fuente: INEGI. Última actualización", format(Sys.time(), '%d %b, %Y'))) +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.02)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid = "Y", base_family = "Rubik") +
theme(legend.position="bottom")
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 50,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato: enero 2025.",
color = "",
caption = paste("Fuente: INEGI. Última actualización", format(Sys.time(), '%d %b, %Y'))) +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.02)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid = "Y", base_family = "Rubik") +
theme(legend.position="bottom")
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 70,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.2,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato: enero 2025.",
color = "",
caption = paste("Fuente: INEGI. Última actualización", format(Sys.time(), '%d %b, %Y'))) +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.02)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid = "Y", base_family = "Rubik") +
theme(legend.position="bottom")
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 100,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.2,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato: enero 2025.",
color = "",
caption = paste("Fuente: INEGI. Última actualización", format(Sys.time(), '%d %b, %Y'))) +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.02)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid = "Y", base_family = "Rubik") +
theme(legend.position="bottom")
ggsave("plots/inflation/inpp.svg",  width = 8, height = 6, create.dir = TRUE)
