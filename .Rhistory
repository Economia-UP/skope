df <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910406" = "Inflación general",
"910407" = "Subyacente",
"910410" = "No subyacente")) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= "2020-01-01")
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line() +
labs( title = "Crecimiento promedio por \nsexenio*",
subtitle = "Promedio del crecimiento anual en México",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI\nDato del último trimestre del 2024 corresponde a la estimación oportuna.*") +
scale_y_percent() +
theme_ipsum_rc(grid="X", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
df <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910406" = "Inflación general",
"910407" = "Subyacente",
"910410" = "No subyacente")) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= "2020-01-01",
indicator != "No subyacente")
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line() +
labs( title = "Crecimiento promedio por \nsexenio*",
subtitle = "Promedio del crecimiento anual en México",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI\nDato del último trimestre del 2024 corresponde a la estimación oportuna.*") +
scale_y_percent() +
theme_ipsum_rc(grid="X", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Crecimiento promedio por \nsexenio*",
subtitle = "Promedio del crecimiento anual en México",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI\nDato del último trimestre del 2024 corresponde a la estimación oportuna.*") +
scale_y_percent() +
theme_ipsum_rc(grid="X", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México*",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI\nDato del último trimestre del 2024 corresponde a la estimación oportuna.*") +
scale_y_percent() +
theme_ipsum_rc(grid="X", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
theme_ipsum_rc(grid="X", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_continuous(breaks = seq(floor(min(df$date)),
ceiling(max(df$date)),
by = 1))
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_continuous(breaks = seq(floor(min(df$date)),
ceiling(max(df$date)),
by = 1)) +
theme_ipsum_rc(grid="X", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(floor_date(min(df$date), "year"),
ceiling_date(max(df$date), "year"),
by = "1 year")) +
theme_ipsum_rc(grid="X", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(floor(min(df$date), "year")),
as.Date(ceiling(max(df$date), "year")),
by = "1 year")) +
theme_ipsum_rc(grid="X", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(floor(min(df$date))),
as.Date(ceiling(max(df$date))),
by = "1 year")) +
theme_ipsum_rc(grid="X", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(floor(min(df$date))),
as.Date(ceiling(max(df$date))),
by = "1 year")) +
theme_ipsum_rc(grid="X", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
theme_ipsum_rc(grid="X", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
df <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910406" = "Inflación general",
"910407" = "Subyacente",
"910410" = "No subyacente")) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= "2023-01-01",
indicator != "No subyacente")
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
df <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910406" = "Inflación general",
"910407" = "Subyacente",
"910410" = "No subyacente")) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= "2022-01-01",
indicator != "No subyacente")
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_ipsum() +
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_ft() +
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_flexoki_dark() +
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
library(patchwork)
?patchwork
install.packages("flexoki")
library(flexoki)
library(flexoki)
install.packages("flexoki")
library(flexoki)
install.packages("flexokn")
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_brewer() +
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_fermenter() +
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574")) +
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
ggsave("plots/inflation/inpc.svg")
# Fetch the data using the specified series IDs (Subyacente)
idSeries <- c("910407", "910408", "910409")  # Your INEGI series IDs
# Get the data
series <- inegi_series_multiple(series = idSeries, token = inegi.api)
df <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910407" = "Total",
"910408" = "Mercancías",
"910409" = "Servicios")) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= "2022-01-01")
sub <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910407" = "Total",
"910408" = "Mercancías",
"910409" = "Servicios")) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= "2022-01-01")
# Core inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación subyacente en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574")) +
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Core inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación subyacente en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "black")) +
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
sub <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910407" = "Total",
"910408" = "Mercancías",
"910409" = "Servicios")) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= "2020-01-01")
# Core inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación subyacente en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "black")) +
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Core inflation graph
ggplot(sub, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación subyacente en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "black")) +
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
sub <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910407" = "Total",
"910408" = "Mercancías",
"910409" = "Servicios")) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= "2022-01-01")
# Core inflation graph
ggplot(sub, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
labs( title = "Inflación subyacente en México",
subtitle = "",
y = "",
x = "",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent() +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "black")) +
theme_ipsum_rc(grid="Y", base_family = "roboto_condensed") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
