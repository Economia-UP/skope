# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$TIME_PERIOD)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue), max(growth_clean$obsValue), by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
ggiraph(file = "plots/gdp/oecd_gdp_growth.html")
library(ggiraph)
ggiraph(file = "plots/gdp/oecd_gdp_growth.html")
??ggiraph
# Create graph
ggplot(growth_clean %>%
# Filtering dataframe
filter(TIME_PERIOD == max(TIME_PERIOD),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "USA")),
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$TIME_PERIOD)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue), max(growth_clean$obsValue), by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
) %>%
ggiraph(file = "plots/gdp/oecd_gdp_growth.html")
help("Defunct")
# Create graph
ggplot(growth_clean %>%
# Filtering dataframe
filter(TIME_PERIOD == max(TIME_PERIOD),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "USA")),
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color, text = "Source: mpg dataset")) +
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$TIME_PERIOD)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue), max(growth_clean$obsValue), by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
ggplotly(tooltip = "text") %>%
config(displayModeBar = FALSE)
# Create graph
ggplot(growth_clean %>%
# Filtering dataframe
filter(TIME_PERIOD == max(TIME_PERIOD),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "USA")),
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color, caption = "Source: mpg dataset")) +
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$TIME_PERIOD)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue), max(growth_clean$obsValue), by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
ggplotly(tooltip = "caption") %>%
config(displayModeBar = FALSE)
# Create graph
ggplot(growth_clean %>%
# Filtering dataframe
filter(TIME_PERIOD == max(TIME_PERIOD),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "USA")),
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$TIME_PERIOD)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue), max(growth_clean$obsValue), by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
ggplotly(tooltip = "none") %>%
config(displayModeBar = FALSE)
# Create graph
ggplot(growth_clean %>%
# Filtering dataframe
filter(TIME_PERIOD == max(TIME_PERIOD),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "USA")),
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$TIME_PERIOD)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue), max(growth_clean$obsValue), by = 1/100)) +
scale_fill_identity() +
# theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
ggplotly(tooltip = "none") %>%
config(displayModeBar = FALSE)
# Create graph
ggplot(growth_clean %>%
# Filtering dataframe
filter(TIME_PERIOD == max(TIME_PERIOD),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "USA")),
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$TIME_PERIOD)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue), max(growth_clean$obsValue), by = 1/100)) +
scale_fill_identity() +
# theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
# Create graph
ggplot(growth_clean %>%
# Filtering dataframe
filter(TIME_PERIOD == max(TIME_PERIOD),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "USA")),
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$TIME_PERIOD)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue), max(growth_clean$obsValue), by = 1/100)) +
scale_fill_identity() +
# theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
) %>%
ggplotly(tooltip = "none") %>%
config(displayModeBar = FALSE)
# Create graph
ggplot(growth_clean %>%
# Filtering dataframe
filter(TIME_PERIOD == max(TIME_PERIOD),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "USA")),
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$TIME_PERIOD)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue), max(growth_clean$obsValue), by = 1/100)) +
scale_fill_identity() +
# theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
) %>%
ggplotly(., tooltip = "none") %>%
config(displayModeBar = FALSE)
# Create graph
ggplot(growth_clean %>%
# Filtering dataframe
filter(TIME_PERIOD == max(TIME_PERIOD),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "USA")),
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$TIME_PERIOD)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue), max(growth_clean$obsValue), by = 1/100)) +
scale_fill_identity() +
# theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
ggplotly(tooltip = "none") %>%
config(displayModeBar = FALSE)
# Create graph
ggplot(growth_clean %>%
# Filtering dataframe
filter(TIME_PERIOD == max(TIME_PERIOD),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "USA")),
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$TIME_PERIOD)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue), max(growth_clean$obsValue), by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
ggsave("plots/gdp/oecd_gdp_growth.svg", width = 1200, height = 900, units = "px", dpi = 150, create.dir = TRUE)
ggplotly(tooltip = "none") %>%
config(displayModeBar = FALSE)
saveWidget(file = "plots/gdp/oecd_gdp_growth.html")
ggplotly(tooltip = "none") %>%
config(displayModeBar = FALSE) %>%
saveWidget(file = "plots/gdp/oecd_gdp_growth.html")
# x = 0.5,  # Horizontal position (centered)
# y = -0.2, # Vertical position (below the plot)
text = "Source: mpg dataset",  # The caption text
ggplotly(tooltip = "none") %>%
ggplotly(tooltip = "none") %>%
ggplotly(tooltip = "none") %>%
layout(annotations = list(
# x = 0.5,  # Horizontal position (centered)
# y = -0.2, # Vertical position (below the plot)
text = "Source: mpg dataset"  # The caption text
# showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0.5,  # Horizontal position (centered)
y = -0.2, # Vertical position (below the plot)
text = "Source: mpg dataset"  # The caption text
# showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0.5,  # Horizontal position (centered)
y = -0.1, # Vertical position (below the plot)
text = "Source: mpg dataset"  # The caption text
# showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0.5,  # Horizontal position (centered)
y = -0, # Vertical position (below the plot)
text = "Source: mpg dataset"  # The caption text
# showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0.5,  # Horizontal position (centered)
y = 0, # Vertical position (below the plot)
text = "Source: mpg dataset"  # The caption text
# showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0.5,  # Horizontal position (centered)
y = 2, # Vertical position (below the plot)
text = "Source: mpg dataset"  # The caption text
# showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0.5,  # Horizontal position (centered)
# y = 2, # Vertical position (below the plot)
text = "Source: mpg dataset"  # The caption text
# showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0.5,  # Horizontal position (centered)
# y = 2, # Vertical position (below the plot)
text = "Source: mpg dataset"  # The caption text
# showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
# x = 0.5,  # Horizontal position (centered)
# y = 2, # Vertical position (below the plot)
text = "Source: mpg dataset"  # The caption text
# showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0,  # Horizontal position (centered)
y = 0, # Vertical position (below the plot)
text = "Source: mpg dataset"  # The caption text
# showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0,  # Horizontal position (centered)
y = 0, # Vertical position (below the plot)
text = "Source: mpg dataset"  # The caption text
# showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
)) %>%
config(displayModeBar = FALSE) %>%
saveWidget(file = "plots/gdp/oecd_gdp_growth.html")
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0,  # Horizontal position (centered)
y = 0, # Vertical position (below the plot)
text = "Source: mpg dataset"  # The caption text
showarrow = FALSE,  # No arrow pointing to the caption
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0,  # Horizontal position (centered)
y = 0, # Vertical position (below the plot)
text = "Source: mpg dataset",  # The caption text
showarrow = FALSE  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
)) %>%
config(displayModeBar = FALSE) %>%
saveWidget(file = "plots/gdp/oecd_gdp_growth.html")
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0,  # Horizontal position (centered)
y = 0, # Vertical position (below the plot)
text = "Source: mpg dataset",  # The caption text
showarrow = FALSE  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
# xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
# yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0,  # Horizontal position (centered)
y = 0, # Vertical position (below the plot)
text = "Source: mpg dataset",  # The caption text
showarrow = FALSE  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 0,  # Horizontal position (centered)
y = 0, # Vertical position (below the plot)
text = "Source: mpg dataset",  # The caption text
showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 5,  # Horizontal position (centered)
y = -0.2, # Vertical position (below the plot)
text = "Source: mpg dataset",  # The caption text
showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 1,  # Horizontal position (centered)
y = -0.2, # Vertical position (below the plot)
text = "Source: mpg dataset",  # The caption text
showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 1,  # Horizontal position (centered)
y = -0.2, # Vertical position (below the plot)
text = "Source: mpg dataset",  # The caption text
showarrow = FALSE,  # No arrow pointing to the caption
# font = list(size = 12, color = "grey"),
xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
yref = 'paper'   # Use paper coordinates for the caption position
))
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 1,  # Horizontal position (centered)
y = -0.2, # Vertical position (below the plot)
text = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y')),  # The caption text
showarrow = FALSE,  # No arrow pointing to the caption
xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
yref = 'paper'   # Use paper coordinates for the caption position
))
# Necessary for interactive plots iframe
ggplotly(tooltip = "none") %>%
layout(annotations = list(
x = 1,  # Horizontal position (centered)
y = -0.2, # Vertical position (below the plot)
text = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y')),  # The caption text
showarrow = FALSE,  # No arrow pointing to the caption
xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
yref = 'paper'   # Use paper coordinates for the caption position
)) %>%
config(displayModeBar = FALSE) %>%
saveWidget(file = "plots/gdp/oecd_gdp_growth.html")
# Necessary for interactive plots iframe
ggplotly(tooltip = "none") %>%
# Recover caption
layout(annotations = list(
x = 1,  # Horizontal position (centered)
y = -0.2, # Vertical position (below the plot)
text = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y')),  # The caption text
showarrow = FALSE,  # No arrow pointing to the caption
xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
yref = 'paper'   # Use paper coordinates for the caption position
)) %>%
config(displayModeBar = FALSE) %>%
saveWidget(file = "plots/gdp/oecd_gdp_growth.html")
# Necessary for interactive plots iframe
ggplotly(tooltip = "none") %>%
# Recover caption
layout(annotations = list(
x = 1,  # Horizontal position (centered)
y = -0.2, # Vertical position (below the plot)
text = paste("Fuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y')),  # The caption text
showarrow = FALSE,  # No arrow pointing to the caption
xref = 'paper',  # Use paper coordinates (relative to the plot's paper size)
yref = 'paper'   # Use paper coordinates for the caption position
)) %>%
config(displayModeBar = FALSE) %>%
saveWidget(file = "plots/gdp/oecd_gdp_growth.html", selfcontained = TRUE)
