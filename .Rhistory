fill = "",
caption = paste("* UE (Unión Europea)\nFuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
rm(list = ls())
library(tidyverse)
library(rsdmx)
library(hrbrthemes)
library(showtext)
library(plotly)
library(htmlwidgets)
font_add_google("Roboto Condensed", "Roboto")
showtext_auto()
url <- "https://sdmx.oecd.org/public/rest/data/OECD.SDD.NAD,DSD_NAMAIN1@DF_QNA_EXPENDITURE_GROWTH_OECD,/A..IRL+ARG+BRA+CHN+IND+IDN+RUS+SAU+ZAF+AUS+AUT+BEL+CAN+CHE+CHL+COL+CRI+CZE+DEU+DNK+ESP+FIN+EST+FRA+GBR+GRC+HUN+ISL+LTU+ISR+ITA+JPN+KOR+LUX+LVA+MEX+NLD+NOR+NZL+POL+PRT+SVK+SVN+SWE+TUR+USA+OECD+G20+G7+USMCA+OECDE+EA20+EU27_2020...B1GQ......GY.?startPeriod=2020"
growth <- readSDMX(url) %>%
as.data.frame()
# Check data
head(growth)
names(growth)
# Clean data
growth_clean <- growth %>%
reframe(obsTime, REF_AREA, obsValue) %>%
arrange(desc(obsTime), REF_AREA) %>%
mutate(
REF_AREA = ifelse(REF_AREA == "EU27_2020", "UE*", REF_AREA),
fill_color = ifelse(REF_AREA == "MEX", "#931336", "grey")) %>%
# Filtering dataframe
filter(obsTime == max(obsTime),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "UE*", "USA"))
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("* UE (Unión Europea)\nFuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
View(growth_clean)
library(tidyverse)
library(rsdmx)
library(hrbrthemes)
library(showtext)
library(plotly)
library(htmlwidgets)
font_add_google("Roboto Condensed", "Roboto")
showtext_auto()
url <- "https://sdmx.oecd.org/public/rest/data/OECD.SDD.NAD,DSD_NAMAIN1@DF_QNA_EXPENDITURE_GROWTH_OECD,/A..IRL+ARG+BRA+CHN+IND+IDN+RUS+SAU+ZAF+AUS+AUT+BEL+CAN+CHE+CHL+COL+CRI+CZE+DEU+DNK+ESP+FIN+EST+FRA+GBR+GRC+HUN+ISL+LTU+ISR+ITA+JPN+KOR+LUX+LVA+MEX+NLD+NOR+NZL+POL+PRT+SVK+SVN+SWE+TUR+USA+OECD+G20+G7+USMCA+OECDE+EA20+EU27_2020...B1GQ......GY.?startPeriod=2020"
growth <- readSDMX(url) %>%
as.data.frame()
# Check data
head(growth)
names(growth)
# Clean data
growth_clean <- growth %>%
reframe(obsTime, REF_AREA, obsValue) %>%
arrange(desc(obsTime), REF_AREA) %>%
mutate(
REF_AREA = ifelse(REF_AREA == "EU27_2020", "UE*", REF_AREA),
fill_color = ifelse(REF_AREA == "MEX", "#931336", "grey")) %>%
# Filtering dataframe
filter(obsTime == max(obsTime),
REF_AREA %in% c("ARG", "BRA", "CAN", "CHL", "CHN", "COL", "ESP", "FRA", "GBR", "IND", "ITA", "JPN", "KOR", "MEX", "UE*", "USA"))
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("* UE (Unión Europea)\nFuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 10, height = 8, units = "in", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 8, height = 6, units = "in", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 8, height = 6, units = "in", dpi = 92, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 10, height = 8, units = "in", dpi = 92, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 4, height = 3, units = "in", dpi = 92, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 8, height = 6, units = "in", dpi = 150, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 6, height = 4.5, dpi = 300, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 6, height = 4.5, dpi = 150, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 12, height = 9, dpi = 150, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 12, height = 9, dpi = 100, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1200, height = 900, units = "px", dpi = 300) create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1200, height = 900, units = "px", dpi = 300 create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1200, height = 900, units = "px", dpi = 300, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1200, height = 900, units = "px", dpi = 90, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1200, height = 800, units = "px", dpi = 90, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 10, height = 8, dpi = 90, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 10, height = 6, dpi = 90, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 10, height = 6, dpi = 92, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 750, height = 450, units = "px", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 750, height = 450, units = "px", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 750, height = 450, units = "px", create.dir = TRUE)
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("* UE (Unión Europea)\nFuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y") +
theme(
legend.position = "none"
)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 750, height = 450, units = "px", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 750, height = 450, units = "px", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 750, height = 900, units = "px", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 750, height = 450, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 750, height = 450, units = "px", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 750, height = 450, units = "px", dpi = 150, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 750, height = 450, units = "px", dpi = 300, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 750, height = 500, units = "px", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 800, height = 500, units = "px", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 800, height = 550, units = "px", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 800, height = 600, units = "px", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1200, height = 900, units = "px", dpi = 100, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1000, height = 700, units = "px", dpi = 100, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1200, height = 900, units = "px", dpi = 100, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1200, height = 900, units = "px", dpi = 300, create.dir = TRUE)
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("* UE (Unión Europea)\nFuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y", base_size = 18) +
theme(
legend.position = "none"
)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1200, height = 900, units = "px", dpi = 300, create.dir = TRUE)
?theme_ipsum_rc
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("* UE (Unión Europea)\nFuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y", base_size = 18, plot_title_size = 32) +
theme(
legend.position = "none"
)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 1200, height = 900, units = "px", dpi = 300, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", create.dir = TRUE)
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("* UE (Unión Europea)\nFuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y", base_size = 18, plot_title_size = 50) +
theme(
legend.position = "none"
)
ggsave("plots/gdp/oecd_gdp_growth.png", create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 8, height = 6, create.dir = TRUE)
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("* UE (Unión Europea)\nFuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(grid = "Y", base_size = 18, plot_title_size = 32) +
theme(
legend.position = "none"
)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 8, height = 6, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 8, height = 6, dpi = 100, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 8, height = 6, dpi = 150, create.dir = TRUE)
# Crecimiento económico per cápita
ggplot(sexenios_gdppc, aes(sexenio, mean_gdppc)) +
geom_col(fill = "#970639") +
labs( title = "PIB per cápita en México promedio por sexenio",
subtitle = "Moneda nacional (MXN)",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma(breaks = seq(0, max(sexenios_gdppc$mean_gdppc), 25000)) +
theme_ipsum_rc(grid = "Y", base_size = 18, plot_title_size = 32) +
ggsave("plots/gdp/gdppc_sexenio.png",  width = 8, height = 6, dpi = 150, create.dir = TRUE)
# Load the necessary libraries
library(inegiR)
library(tidyverse)
library(ggpattern)
library(hrbrthemes)
library(showtext)
font_add_google("Roboto Condensed", "Roboto")
showtext_auto()
library(svglite)
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("* UE (Unión Europea)\nFuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(
grid = "Y",
base_size = 18,  # Larger base size for readability
plot_title_size = 32,  # H1-sized title
plot_title_face = "bold",  # Bold title
plot_title_margin = 15,  # More space around title
subtitle_size = 24,  # Larger subtitle
subtitle_margin = 20,  # More space around subtitle
caption_size = 18,  # Larger caption
caption_margin = 15,  # More space around caption
axis_text_size = 16,  # Larger axis text
axis_title_size = 20,  # Larger axis labels
plot_margin = margin(30, 30, 30, 30),
grid_col = "#482626",
axis_col = "#cccccc",
axis = FALSE,
ticks = FALSE
) +
theme(
legend.position = "none"
)
ggsave("plots/gdp/oecd_gdp_growth.png", width = 8, height = 6, create.dir = TRUE)
ggsave("plots/gdp/oecd_gdp_growth.svg", width = 8, height = 6, create.dir = TRUE)
# Create graph
ggplot(growth_clean,  # Arrange in descending order
# Continue ggplot
aes(obsValue/100, reorder(REF_AREA, obsValue), fill = fill_color)) +  # Reorder with negative obsValue
geom_col(position = "dodge") +
# Labels
labs(
title = paste("Crecimiento económico por país", max(growth_clean$obsTime)),
subtitle = "",
y = "",
x = "",
fill = "",
caption = paste("* UE (Unión Europea)\nFuente: OECD. Última actualización", format(Sys.time(), '%d %b, %Y'))
) +
scale_x_percent(breaks = seq(min(growth_clean$obsValue)/100, max(growth_clean$obsValue)/100, by = 1/100)) +
scale_fill_identity() +
theme_ipsum_rc(
grid = "Y"
) +
theme(
legend.position = "none"
)
ggsave("plots/gdp/oecd_gdp_growth.svg", width = 8, height = 6, create.dir = TRUE)
library(svglite)
# Instalar paquetes si es necesario
install.packages("oaxaca")
# Cargar librerías necesarias
library(oaxaca)
library(ggplot2)
library(dplyr)
library(readr)
library(httr)  # Para descargar archivos
library(zip)   # Para extraer archivos
# Definir años y trimestres a analizar
anios <- 24  # Usar los últimos dos dígitos del año (ejemplo: 2024 -> 24)
trimestres <- 1:4
# Carpeta de destino para los archivos
carpeta_destino <- "/r/labor/oaxaca/"
# Crear una lista para almacenar resultados
resultados <- data.frame()
# Iterar sobre cada trimestre
for (trim in trimestres) {
# Construir URL del archivo ZIP
url <- paste0("https://www.inegi.org.mx/contenidos/programas/enoe/15ymas/microdatos/enoe_2024_trim",
trim, "_csv.zip")
# Definir nombre del archivo ZIP local
archivo_zip <- paste0(carpeta_destino, "enoe_2024_trim", trim, ".zip")
# Descargar el archivo ZIP
download.file(url, archivo_zip, mode = "wb")
# Extraer solo el archivo relevante
unzip(archivo_zip, exdir = carpeta_destino)
# Buscar el archivo CSV de interés (ENOE_SDEMT#YY.csv)
patron_csv <- paste0("ENOE_SDEMT", trim, anios, ".csv")
archivo_csv <- list.files(carpeta_destino, pattern = patron_csv, full.names = TRUE)
if (length(archivo_csv) == 0) {
next # Si no encuentra el archivo, pasa al siguiente trimestre
}
# Cargar la base de datos
datos <- read_csv(archivo_csv[1]) # Puede requerir ajustes según la estructura del archivo
# Crear variables necesarias para el análisis
datos <- datos %>%
mutate(log_ingocup = log(ingocup),
exp = eda - anios_esc - 6,
exp2 = exp^2)
# Filtrar datos con valores válidos
datos <- datos %>% filter(!is.na(log_ingocup) & !is.na(sex))
# Ajustar modelo Oaxaca-Blinder
modelo <- log_ingocup ~ anios_esc + exp + exp2 + seg_soc + rama + pos_ocu
oaxaca_result <- oaxaca(modelo, data = datos, group = "sex", R = 100)
# Guardar el wage gap estimado
wage_gap <- oaxaca_result$overall[3, "estimate"]  # Parte no explicada de la brecha salarial
# Guardar resultados
resultados <- rbind(resultados, data.frame(Año = 2024, Trimestre = trim, Wage_Gap = wage_gap))
# Imprimir progreso
print(paste("Procesado: 2024 Trimestre:", trim))
}
# Iterar sobre cada trimestre
for (trim in trimestres) {
# Construir URL del archivo ZIP
url <- paste0("https://www.inegi.org.mx/contenidos/programas/enoe/15ymas/microdatos/enoe_2024_trim",
trim, "_csv.zip")
# Definir nombre del archivo ZIP local
archivo_zip <- paste0(carpeta_destino, "enoe_2024_trim", trim, ".zip")
# Descargar el archivo ZIP
download.file(url, archivo_zip, mode = "wb")
# Extraer solo el archivo relevante
unzip(archivo_zip, exdir = carpeta_destino)
# Buscar el archivo CSV de interés (ENOE_SDEMT#YY.csv)
patron_csv <- paste0("ENOE_SDEMT", trim, anios, ".csv")
archivo_csv <- list.files(carpeta_destino, pattern = patron_csv, full.names = TRUE)
if (length(archivo_csv) == 0) {
next # Si no encuentra el archivo, pasa al siguiente trimestre
}
# Cargar la base de datos
datos <- read_csv(archivo_csv[1]) # Puede requerir ajustes según la estructura del archivo
# Crear variables necesarias para el análisis
datos <- datos %>%
mutate(log_ingocup = log(ingocup),
exp = eda - anios_esc - 6,
exp2 = exp^2)
# Filtrar datos con valores válidos
datos <- datos %>% filter(!is.na(log_ingocup) & !is.na(sex))
# Ajustar modelo Oaxaca-Blinder
modelo <- log_ingocup ~ anios_esc + exp + exp2 + seg_soc + rama + pos_ocu
oaxaca_result <- oaxaca(modelo, data = datos, group = "sex", R = 100)
# Guardar el wage gap estimado
wage_gap <- oaxaca_result$overall[3, "estimate"]  # Parte no explicada de la brecha salarial
# Guardar resultados
resultados <- rbind(resultados, data.frame(Año = 2024, Trimestre = trim, Wage_Gap = wage_gap))
# Imprimir progreso
print(paste("Procesado: 2024 Trimestre:", trim))
}
# Iterar sobre cada trimestre
for (trim in trimestres) {
# Construir URL del archivo ZIP
url <- paste0("https://www.inegi.org.mx/contenidos/programas/enoe/15ymas/microdatos/enoe_2024_trim",
trim, "_csv.zip")
# Definir nombre del archivo ZIP local
archivo_zip <- paste0(carpeta_destino, "enoe_2024_trim", trim, ".zip")
# Descargar el archivo ZIP
download.file(url, archivo_zip, mode = "wb", timeout = Inf)
# Extraer solo el archivo relevante
unzip(archivo_zip, exdir = carpeta_destino)
# Buscar el archivo CSV de interés (ENOE_SDEMT#YY.csv)
patron_csv <- paste0("ENOE_SDEMT", trim, anios, ".csv")
archivo_csv <- list.files(carpeta_destino, pattern = patron_csv, full.names = TRUE)
if (length(archivo_csv) == 0) {
next # Si no encuentra el archivo, pasa al siguiente trimestre
}
# Cargar la base de datos
datos <- read_csv(archivo_csv[1]) # Puede requerir ajustes según la estructura del archivo
# Crear variables necesarias para el análisis
datos <- datos %>%
mutate(log_ingocup = log(ingocup),
exp = eda - anios_esc - 6,
exp2 = exp^2)
# Filtrar datos con valores válidos
datos <- datos %>% filter(!is.na(log_ingocup) & !is.na(sex))
# Ajustar modelo Oaxaca-Blinder
modelo <- log_ingocup ~ anios_esc + exp + exp2 + seg_soc + rama + pos_ocu
oaxaca_result <- oaxaca(modelo, data = datos, group = "sex", R = 100)
# Guardar el wage gap estimado
wage_gap <- oaxaca_result$overall[3, "estimate"]  # Parte no explicada de la brecha salarial
# Guardar resultados
resultados <- rbind(resultados, data.frame(Año = 2024, Trimestre = trim, Wage_Gap = wage_gap))
# Imprimir progreso
print(paste("Procesado: 2024 Trimestre:", trim))
}
# Load required libraries
library(oaxaca)
library(ggplot2)
library(dplyr)
library(readr)
library(httr)  # For downloading files
library(zip)   # For extracting ZIP files
# Define the years and quarters to analyze
anio <- 24  # Use last two digits of the year (e.g., 2024 -> 24)
trimestres <- 1:4
# Define destination folder for downloads
carpeta_destino <- "/r/labor/oaxaca/"
# Ensure the destination folder exists
if (!dir.exists(carpeta_destino)) {
dir.create(carpeta_destino, recursive = TRUE)
}
# Store results
resultados <- data.frame()
# Loop through each quarter
for (trim in trimestres) {
# Construct the ZIP file URL
url <- paste0("https://www.inegi.org.mx/contenidos/programas/enoe/15ymas/microdatos/enoe_2024_trim",
trim, "_csv.zip")
# Define local ZIP file name
archivo_zip <- paste0(carpeta_destino, "enoe_2024_trim", trim, ".zip")
# Download file using httr::GET
response <- GET(url, write_disk(archivo_zip, overwrite = TRUE), timeout(300))  # 300s timeout
# Check if the download was successful
if (http_error(response)) {
print(paste("Failed to download:", url))
next
}
# Extract only the relevant CSV file
unzip(archivo_zip, exdir = carpeta_destino)
# Search for the correct CSV file (ENOE_SDEMT#YY.csv)
patron_csv <- paste0("ENOE_SDEMT", trim, anio, ".csv")
archivo_csv <- list.files(carpeta_destino, pattern = patron_csv, full.names = TRUE)
if (length(archivo_csv) == 0) {
print(paste("No matching CSV found for:", trim))
next  # Skip if no relevant file is found
}
# Load the dataset
datos <- read_csv(archivo_csv[1])  # Adjust if needed based on structure
# Create necessary variables for analysis
datos <- datos %>%
mutate(log_ingocup = log(ingocup),
exp = eda - anios_esc - 6,
exp2 = exp^2)
# Filter out invalid values
datos <- datos %>% filter(!is.na(log_ingocup) & !is.na(sex))
# Define Oaxaca-Blinder model
modelo <- log_ingocup ~ anios_esc + exp + exp2 + seg_soc + rama + pos_ocu
oaxaca_result <- oaxaca(modelo, data = datos, group = "sex", R = 100)
# Extract estimated wage gap
wage_gap <- oaxaca_result$overall[3, "estimate"]  # Unexplained wage gap component
# Store results
resultados <- rbind(resultados, data.frame(Año = 2024, Trimestre = trim, Wage_Gap = wage_gap))
# Print progress
print(paste("Processed: 2024 Trimestre:", trim))
}
