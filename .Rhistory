data = df %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
aes(label = scales::percent(values / 100)),  # Format label as percentage
hjust = -0.3,  # Adjust text position (shift right)
vjust = 0.2,
size = 3.5,
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Consumidor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(df$values)/100, max(df$values)/100,
by = 0.01)) +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
ggsave("plots/inflation/inpc.svg")
# Fetch the data using the specified series IDs (Subyacente)
idSeries2 <- c("910407", "910408", "910409")  # Your INEGI series IDs
# Get the data
series2 <- inegi_series_multiple(series = idSeries2, token = inegi.api)
sub <- series2 %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910407" = "Total",
"910408" = "Mercancías",
"910409" = "Servicios") %>%
factor(levels = c("Total", "Mercancías", "Servicios"))) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= "2020-01-01",
indicator != "Total")
# Core inflation graph
ggplot(sub, aes(date, values / 100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = sub %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
geom_text(
data = sub %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
aes(label = scales::percent(values / 100)),  # Format label as percentage
hjust = -0.3,  # Adjust text position (shift right)
vjust = 0.2,
size = 3.5,
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
scale_y_percent(breaks = seq(min(sub$values)/100, max(sub$values) / 100, by = 0.01)) +
scale_x_date(
breaks = seq(as.Date(min(sub$date)), as.Date(max(sub$date)), by = "1 year"),  # Major ticks (yearly)
minor_breaks = seq(as.Date(min(sub$date)), as.Date(max(sub$date)), by = "1 month"),  # Minor ticks (monthly)
date_labels = "%Y"  # Only show years on the x-axis
) +
labs(
title = "Inflación subyacente en México",
subtitle = "",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI"
) +
scale_color_manual(values = c("#970639", "#043574", "black")) +
theme_ipsum_rc(grid = "Y") +  # hrbrthemes disables minor grid by default
theme(
legend.position = "bottom",
panel.grid.minor = element_line(color = "gray80", linetype = "dashed")  # Enable minor grid lines
) %>%
gg_check()
ggsave("plots/inflation/inpc_sub.svg")
View(serie)
# Load the necessary libraries
library(inegiR)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggrepel)
library(ggpattern)
library(hrbrthemes)
library(forcats)
library(lubridate)
library(sysfonts)
library(showtext)
library(svglite)
# Fetch the data using the specified series IDs
idSeries <- c("673095", "673098", "673100")  # Your INEGI series IDs
# Get the data
series <- inegi_series_multiple(series = idSeries, token = inegi.api)
serie <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"673095" = "INPP (sin petróleo y con servicios)",
"673098" = "Actividades secundarias sin petróleo",
"673100" = "Actividades terciarias") %>%
factor(levels = c("INPP (sin petróleo y con servicios)",
"Actividades secundarias sin petróleo",
"Actividades terciarias"))) %>%
rename(indicator = meta_indicatorid) %>%
group_by(indicator) %>%
arrange(date) %>%
mutate(pc = (lag(values, 12)/values -1)*100) %>%
filter(date >= "2022-01-01")
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 40,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.02)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
serie <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"673095" = "INPP (sin petróleo y con servicios)",
"673098" = "Actividades secundarias sin petróleo",
"673100" = "Actividades terciarias") %>%
factor(levels = c("INPP (sin petróleo y con servicios)",
"Actividades secundarias sin petróleo",
"Actividades terciarias"))) %>%
rename(indicator = meta_indicatorid) %>%
group_by(indicator) %>%
arrange(date) %>%
mutate(pc = (lag(values, 12)/values -1)*100) %>%
filter(date >= "2022-01-01")
head(serie)
serie <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"673095" = "INPP (sin petróleo y con servicios)",
"673098" = "Actividades secundarias sin petróleo",
"673100" = "Actividades terciarias") %>%
factor(levels = c("INPP (sin petróleo y con servicios)",
"Actividades secundarias sin petróleo",
"Actividades terciarias"))) %>%
rename(indicator = meta_indicatorid) %>%
group_by(indicator) %>%
arrange(date)
head(serie)
View(serie)
View(serie)
serie <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"673095" = "INPP (sin petróleo y con servicios)",
"673098" = "Actividades secundarias sin petróleo",
"673100" = "Actividades terciarias") %>%
factor(levels = c("INPP (sin petróleo y con servicios)",
"Actividades secundarias sin petróleo",
"Actividades terciarias"))) %>%
rename(indicator = meta_indicatorid) %>%
group_by(indicator) %>%
arrange(date) %>%
mutate(pc = (values/lag(values, 12) -1)*100) %>%
filter(date >= "2022-01-01")
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 40,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.02)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
ggsave("plots/inflation/inpp.svg")
# Define your INEGI API key
inegi.api = Sys.getenv("INEGI_API")
inegi.api
# Estimación oportuna del PIB
eopib <- inegi_series(series = "733855", token = inegi.api)
inegi.api <- "fdsfñsj8f9sadfns849fhain"
install.packages("siebanxicor")
library(siebanxicor)
install.packages(c("bayestestR", "insight", "purrr", "RcppArmadillo", "renv"))
# Load the necessary libraries
library(inegiR)
library(tidyverse)
library(ggpattern)
library(hrbrthemes)
library(showtext)
library(svglite)
font_add_google("Roboto Condensed", "Roboto")
showtext_auto()
inegi.api = "446548c3-7b55-4b22-8430-ac8f251ea555"
# Estimación oportuna del PIB
eopib <- inegi_series(series = "733855", token = inegi.api)
eopib %>%
filter(date >= "2022-01-01") %>%
ggplot(aes(date, values/100)) +
geom_line(data = eopib %>%
filter(date >= "2022-01-01") %>%
arrange(date) %>%
slice(1:(n() - 1)),
aes(date, values/100),
size = 1, color = "#970639") +
geom_line(data = eopib %>%
filter(date >= "2022-01-01") %>%
arrange(desc(date)) %>%
slice(1:2),
aes(date, values/100),
color = "#970639", linetype = "dashed", size = 1) +
labs(title = "Crecimiento económico en México*",
subtitle = "Variación anual",
y = "",
x = "",
caption = "Fuente: INEGI \nDato del último trimestre del 2024 corresponde a la estimación oportuna.*") +
scale_y_percent() +
theme_ipsum_rc(grid = "Y") %>%
gg_check()
orden_sexenios <- c(
"Miguel de la Madrid (1982-1988)",
"Carlos Salinas (1988-1994)",
"Ernesto Zedillo (1994-2000)",
"Vicente Fox (2000-2006)",
"Felipe Calderón (2006-2012)",
"Enrique Peña Nieto (2012-2018)",
"Andrés Manuel López Obrador (2018-2024)",
"Claudia Sheinbaum Pardo (2024-2030)"
)
gdp <- eopib %>%
# group_by(date_shortcut) %>%
# arrange(date) %>%
# mutate(growth  = (values/lag(values) - 1)*100) %>%
mutate(year = year(date),  # Extrae el año de la fecha
sexenio = case_when(
year > 1982 & year <= 1988 ~ "Miguel de la Madrid (1982-1988)",
year > 1988 & year <= 1994 ~ "Carlos Salinas (1988-1994)",
year > 1994 & year <= 2000 ~ "Ernesto Zedillo (1994-2000)",
year > 2000 & year <= 2006 ~ "Vicente Fox (2000-2006)",
year > 2006 & year <= 2012 ~ "Felipe Calderón (2006-2012)",
year > 2012 & year <= 2018 ~ "Enrique Peña Nieto (2012-2018)",
year > 2018 & year <= 2024 ~ "Andrés Manuel López Obrador (2018-2024)",
year > 2024 & year <= 2030 ~ "Claudia Sheinbaum Pardo (2024-2030)",
TRUE ~ "Otro"
),
sexenio = factor(sexenio, levels = orden_sexenios), # Ordenar como factor
)
growth_annual <- gdp %>%
group_by(year) %>%
summarize(growth = mean(values), .groups = "drop")
growth_annual %>%
filter(year >= 2018) %>%
ggplot(aes(year, growth/100)) +
geom_col(data = growth_annual %>%
filter(year >= 2018) %>%
arrange(year) %>%
slice(1:(n())),
aes(year, growth/100),
size = 1, fill = "#970639") +
geom_col_pattern(data = growth_annual %>%
filter(year >= 2018) %>%
arrange(desc(year)) %>%
slice(1),
aes(year, growth/100),
fill = "#970639",  # Background color
pattern = "stripe",  # Striped pattern
pattern_color = "#fdfcfd",  # Stripe color
pattern_density = 0.2,  # Adjust spacing of stripes
pattern_angle = 45,  # Angle of stripes
size = 1) +
labs(title = "Crecimiento económico en México*",
subtitle = "Variación promedio anual",
y = "",
x = "",
caption = "Fuente: INEGI \nDato del último trimestre del 2024 corresponde a la estimación oportuna.*") +
scale_x_continuous(breaks = seq(2018, max(growth_annual$year), by = 1)) +
scale_y_percent(breaks = seq(floor(min(growth_annual$growth / 100)),
ceiling(max(growth_annual$growth / 100)),
by = 0.02)) +
# scale_y_percent() +
theme_ipsum_rc(grid = "Y") %>%
gg_check()
sexenios_gdp <- gdp %>%
group_by(sexenio) %>%
reframe(mean_growth = mean(values, na.rm = TRUE)) %>%
filter(!is.na(sexenio)) %>%
arrange(sexenio)
# Crecimiento promedio por sexenio
ggplot(sexenios_gdp, aes(mean_growth/100, fct_rev(sexenio))) +
geom_col(fill = "#970639") +
labs( title = "Crecimiento promedio por \nsexenio*",
subtitle = "Promedio del crecimiento anual en México",
y = "",
x = "",
caption = "Fuente: INEGI\nDato del último trimestre del 2024 corresponde a la estimación oportuna.*") +
scale_x_percent() +
theme_ipsum_rc(grid="X", base_family = "roboto_condensed") %>%   # Use Roboto Condensed
gg_check()
# Fetch the data using the specified series IDs
gdp <- inegi_series(series = "736181", token = inegi.api)
pop <- inegi_series_multiple(series = "289242", token = inegi.api) %>%
select(date, date_shortcut, values)
gdppc <- left_join(gdp, pop, join_by(date), suffix = c("_gdp", "_pop")) %>%
reframe(date, date_shortcut = date_shortcut_gdp, gdppc = values_gdp/values_pop*1000000) %>%
filter(gdppc != 0)
# Crecimiento económico per cápita
ggplot(gdppc, aes(date, gdppc)) +
geom_line(size = 1, color = "#970639") +
labs( title = "PIB per cápita en México",
subtitle = "Moneda nacional",
y = "",
x = "",
caption = "Fuente: INEGI") +
scale_y_comma() +
theme_ipsum_rc(grid="Y") %>%
gg_check()
write.csv(gdppc, "data/growth/gdppc.csv", row.names = FALSE)
# Load the necessary libraries
library(inegiR)
library(tidyverse)
library(ggpattern)
library(ggrepel)
library(hrbrthemes)
library(showtext)
library(svglite)
font_add_google("Roboto Condensed", "Roboto")
showtext_auto()
# Fetch the data using the specified series IDs
idSeries1 <- c("910406", "910407", "910410")  # Your INEGI series IDs
# Get the data
series1 <- inegi_series_multiple(series = idSeries1, token = inegi.api)
# Transform the data
series.wide <- series1 %>%
select(date, values, meta_indicatorid) %>%
pivot_wider(names_from = meta_indicatorid, values_from = values) %>%
rename(
date = date,
'Inflación general' = '910406',
'Subyacente' = '910407',
'No subyacente' = '910410')
df <- series1 %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910406" = "Inflación general",
"910407" = "Subyacente",
"910410" = "No subyacente")) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= "2022-01-01",
indicator != "No subyacente")
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = df %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
# geom_text(
#   data = df %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
#   aes(label = scales::percent(values / 100)),  # Format label as percentage
#   hjust = -0.3,  # Adjust text position (shift right)
#   vjust = 0.2,
#   size = 3.5,
#   show.legend = FALSE
# ) +
ggrepel::geom_text_repel(
data = df %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(values/100, accuracy = 0.1)),
nudge_x = 40,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Consumidor",
y = "",
x = "Último dato: enero 2025.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(df$values)/100, max(df$values)/100,
by = 0.01)) +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Fetch the data using the specified series IDs (Subyacente)
idSeries2 <- c("910407", "910408", "910409")  # Your INEGI series IDs
# Get the data
series2 <- inegi_series_multiple(series = idSeries2, token = inegi.api)
# Transform the data
series2.wide <- series2 %>%
select(date, values, meta_indicatorid) %>%
pivot_wider(names_from = meta_indicatorid, values_from = values) %>%
rename(
date = date,
"Total" = "910407",
"Mercancías" = "910408",
"Servicios" = "910409") %>%
factor(levels = c("Total", "Mercancías", "Servicios"))
sub <- series2 %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910407" = "Total",
"910408" = "Mercancías",
"910409" = "Servicios") %>%
factor(levels = c("Total", "Mercancías", "Servicios"))) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= "2022-01-01",
indicator != "Total")
# Core inflation graph
ggplot(sub, aes(date, values / 100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = sub %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
geom_text(
data = sub %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
aes(label = scales::percent(values / 100)),  # Format label as percentage
hjust = -0.3,  # Adjust text position (shift right)
vjust = 0.2,
size = 3.5,
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
scale_y_percent(breaks = seq(min(sub$values)/100, max(sub$values) / 100, by = 0.01)) +
scale_x_date(
breaks = seq(as.Date(min(sub$date)), as.Date(max(sub$date)), by = "1 year"),  # Major ticks (yearly)
minor_breaks = seq(as.Date(min(sub$date)), as.Date(max(sub$date)), by = "1 month"),  # Minor ticks (monthly)
date_labels = "%Y"  # Only show years on the x-axis
) +
labs(
title = "Inflación subyacente en México",
subtitle = "",
y = "",
x = "Último dato: enero 2025.",
color = "",
caption = "Fuente: INEGI"
) +
scale_color_manual(values = c("#970639", "#043574", "black")) +
theme_ipsum_rc(grid = "Y") +  # hrbrthemes disables minor grid by default
theme(
legend.position = "bottom",
panel.grid.minor = element_line(color = "gray80", linetype = "dashed")  # Enable minor grid lines
) %>%
gg_check()
