by = 0.01)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 40,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.01)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
ggsave("plots/inflation/inpp.svg")
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 40,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.02)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
ggsave("plots/inflation/inpp.svg")
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 40,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(serie$pc)/100, 2/100,
by = 0.02)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 40,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(serie$pc)/100, 3/100,
by = 0.02)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 40,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.02),
limits = -10/100, 2/100) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 40,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.02),
limits = c(-10/100, 2/100)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
scale_x_date(breaks = seq(as.Date(min(serie$date)),
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 40,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.02)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
ggsave("plots/inflation/inpp.svg")
# Inflation graph
ggplot(df, aes(date, values/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = df %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
geom_text(
data = df %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
aes(label = scales::percent(values / 100)),  # Format label as percentage
hjust = -0.3,  # Adjust text position (shift right)
vjust = 0.2,
size = 3.5,
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Consumidor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(df$values)/100, max(df$values)/100,
by = 0.01)) +
scale_x_date(breaks = seq(as.Date(min(df$date)),
as.Date(max(df$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
ggsave("plots/inflation/inpc.svg")
# Fetch the data using the specified series IDs (Subyacente)
idSeries2 <- c("910407", "910408", "910409")  # Your INEGI series IDs
# Get the data
series2 <- inegi_series_multiple(series = idSeries2, token = inegi.api)
sub <- series2 %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"910407" = "Total",
"910408" = "Mercancías",
"910409" = "Servicios") %>%
factor(levels = c("Total", "Mercancías", "Servicios"))) %>%
rename(indicator = meta_indicatorid) %>%
filter(date >= "2020-01-01",
indicator != "Total")
# Core inflation graph
ggplot(sub, aes(date, values / 100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = sub %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
geom_text(
data = sub %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
aes(label = scales::percent(values / 100)),  # Format label as percentage
hjust = -0.3,  # Adjust text position (shift right)
vjust = 0.2,
size = 3.5,
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
scale_y_percent(breaks = seq(min(sub$values)/100, max(sub$values) / 100, by = 0.01)) +
scale_x_date(
breaks = seq(as.Date(min(sub$date)), as.Date(max(sub$date)), by = "1 year"),  # Major ticks (yearly)
minor_breaks = seq(as.Date(min(sub$date)), as.Date(max(sub$date)), by = "1 month"),  # Minor ticks (monthly)
date_labels = "%Y"  # Only show years on the x-axis
) +
labs(
title = "Inflación subyacente en México",
subtitle = "",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI"
) +
scale_color_manual(values = c("#970639", "#043574", "black")) +
theme_ipsum_rc(grid = "Y") +  # hrbrthemes disables minor grid by default
theme(
legend.position = "bottom",
panel.grid.minor = element_line(color = "gray80", linetype = "dashed")  # Enable minor grid lines
) %>%
gg_check()
ggsave("plots/inflation/inpc_sub.svg")
View(serie)
# Load the necessary libraries
library(inegiR)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggrepel)
library(ggpattern)
library(hrbrthemes)
library(forcats)
library(lubridate)
library(sysfonts)
library(showtext)
library(svglite)
# Fetch the data using the specified series IDs
idSeries <- c("673095", "673098", "673100")  # Your INEGI series IDs
# Get the data
series <- inegi_series_multiple(series = idSeries, token = inegi.api)
serie <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"673095" = "INPP (sin petróleo y con servicios)",
"673098" = "Actividades secundarias sin petróleo",
"673100" = "Actividades terciarias") %>%
factor(levels = c("INPP (sin petróleo y con servicios)",
"Actividades secundarias sin petróleo",
"Actividades terciarias"))) %>%
rename(indicator = meta_indicatorid) %>%
group_by(indicator) %>%
arrange(date) %>%
mutate(pc = (lag(values, 12)/values -1)*100) %>%
filter(date >= "2022-01-01")
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 40,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.02)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
serie <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"673095" = "INPP (sin petróleo y con servicios)",
"673098" = "Actividades secundarias sin petróleo",
"673100" = "Actividades terciarias") %>%
factor(levels = c("INPP (sin petróleo y con servicios)",
"Actividades secundarias sin petróleo",
"Actividades terciarias"))) %>%
rename(indicator = meta_indicatorid) %>%
group_by(indicator) %>%
arrange(date) %>%
mutate(pc = (lag(values, 12)/values -1)*100) %>%
filter(date >= "2022-01-01")
head(serie)
serie <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"673095" = "INPP (sin petróleo y con servicios)",
"673098" = "Actividades secundarias sin petróleo",
"673100" = "Actividades terciarias") %>%
factor(levels = c("INPP (sin petróleo y con servicios)",
"Actividades secundarias sin petróleo",
"Actividades terciarias"))) %>%
rename(indicator = meta_indicatorid) %>%
group_by(indicator) %>%
arrange(date)
head(serie)
View(serie)
View(serie)
serie <- series %>%
select(date, values, meta_indicatorid) %>%
mutate(
meta_indicatorid = recode(meta_indicatorid,
"673095" = "INPP (sin petróleo y con servicios)",
"673098" = "Actividades secundarias sin petróleo",
"673100" = "Actividades terciarias") %>%
factor(levels = c("INPP (sin petróleo y con servicios)",
"Actividades secundarias sin petróleo",
"Actividades terciarias"))) %>%
rename(indicator = meta_indicatorid) %>%
group_by(indicator) %>%
arrange(date) %>%
mutate(pc = (values/lag(values, 12) -1)*100) %>%
filter(date >= "2022-01-01")
# Inflation (INPP) graph
ggplot(serie, aes(date, pc/100, color = indicator)) +
geom_line(size = 1) +
geom_point(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),  # Select last point per line
size = 2.5  # Adjust point size
) +
ggrepel::geom_text_repel(
data = serie %>% group_by(indicator) %>% filter(date == max(date)),
aes(label = scales::percent(pc/100, accuracy = 0.1)),
nudge_x = 40,  # Desplazamiento base
direction = "y",  # Solo mueve en eje Y
min.segment.length = Inf,  # Elimina líneas de conexión
hjust = -0.3,
vjust = 0.5,
size = 3.5,
box.padding = 0.2,  # Espacio alrededor de etiquetas
show.legend = FALSE
) +
coord_cartesian(clip = "off") +  # Disable clipping for points/text at edges
labs( title = "Inflación en México",
subtitle = "Índice Nacional de Precios al Productor",
y = "",
x = "Último dato diciembre 2024.",
color = "",
caption = "Fuente: INEGI") +
scale_y_percent(breaks = seq(min(serie$pc)/100, max(serie$pc)/100,
by = 0.02)) +
scale_x_date(breaks = seq(as.Date(min(serie$date)),
as.Date(max(serie$date)),
by = "1 year"),
date_labels = "%Y") +  # Format labels as only the year
scale_color_manual(values = c("#970639", "#043574", "#015b51")) +
theme_ipsum_rc(grid="Y") +
theme(legend.position="bottom") %>%   # Use Roboto Condensed
gg_check()
ggsave("plots/inflation/inpp.svg")
# Define your INEGI API key
inegi.api = Sys.getenv("INEGI_API")
inegi.api
# Estimación oportuna del PIB
eopib <- inegi_series(series = "733855", token = inegi.api)
inegi.api <- "fdsfñsj8f9sadfns849fhain"
